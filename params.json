{"name":"typetalk-js","tagline":"Typetalk JavaScript Client Library - unofficial","body":"JavaScript library for Typetalk\r\n======================\r\n\r\n[typetalk-js](https://github.com/shoito/typetalk-js) aims to provide a complete, asynchronous client library for the [Typetalk API](http://developers.typetalk.in/api.html).\r\n\r\nFor API details and how to use promises, see the [JavaScript Promises](http://www.html5rocks.com/en/tutorials/es6/promises/).\r\n\r\ntypetalk-js is an **unofficial** library.\r\n\r\n## Typetalk\r\nTypetalk - http://www.typetalk.in\r\n\r\n> Typetalk: Team discussions and collaboration through instant messaging.\r\n\r\n> Typetalk brings fun and ease to team discussions through instant messaging on desktop and mobile devices.\r\n\r\n## Requirements\r\n\r\nSupport Promises\r\n\r\n[Can I use Promises?](http://caniuse.com/promises)\r\n\r\n### Browser\r\n\r\nUse a polyfill script tag:\r\n\r\n    <script src=\"https://www.promisejs.org/polyfills/promise-4.0.0.js\"></script>\r\n\r\nThe global variable Promise becomes available after the above script tag.\r\n\r\n## Installation\r\n\r\n### Node.js\r\n\r\n    npm install typetalk-js --save\r\n\r\n### Browser\r\n\r\n    bower install typetalk-js --save\r\n\r\nor clone the repository or just copy the files `typetalk.js` or `typetalk.min.js` to your server.\r\n\r\nand then include it in your pages with `<script src=\"typetalk.min.js\"></script>`\r\n\r\n## Getting started\r\n\r\nSee also \r\n\r\n- [Typetalk for Developers](http://developers.typetalk.in/index.html)\r\n- [typetalk-js API documentation](http://shoito.github.io/typetalk-js/Typetalk.html)\r\n\r\n### Setup (Client Credentials as Grant Type)\r\n\r\n    var Typetalk = require('typetalk');\r\n\r\n    var typetalk = new Typetalk({\r\n        'client_id': 'YOUR_CLIENT_ID__CLIENT_CREDENTIALS', \r\n        'client_secret': 'YOUR_CLIENT_SECRET__CLIENT_CREDENTIALS',\r\n        'scope': 'topic.read,topic.post,my'\r\n    });\r\n\r\n### Setup (Authorization Code as Grant Type)\r\n\r\n    var typetalk = new Typetalk({\r\n        'client_id': 'YOUR_CLIENT_ID__AUTHORIZATION_CODE',\r\n        'client_secret': 'YOUR_CLIENT_SECRET__AUTHORIZATION_CODE',\r\n        'redirect_uri': 'https://YOUR_APP_DOMAIN/provider_cb',\r\n        'scope': 'topic.read,topic.post,my'\r\n    });\r\n\r\n### Get access token using client credentials\r\n\r\n    typetalk.getAccessTokenUsingClientCredentials().then(function(data) {\r\n        typetalk.accessToken = data.access_token;\r\n        typetalk.refreshToken = data.refresh_token;\r\n    }, function(err) {\r\n        console.error(err);\r\n    });\r\n\r\n### Get my profile\r\n\r\n    typetalk.getMyProfile().then(function(profile) {\r\n        console.log(profile);\r\n    });\r\n\r\n### Get my topics\r\n\r\n    typetalk.getMyTopics().then(function(topics) {\r\n        console.log(topics);\r\n    });\r\n\r\n### Post message\r\n\r\n    typetalk.postMessage(1657, {'message': '@shoito Hellow World!'}).then(function(message) {\r\n        console.log(message);\r\n    });\r\n\r\n## Sample App using typetalk-js library\r\n\r\n- [Typetalk Notifications](https://github.com/shoito/typetalk-notifications)\r\n\r\n## See also\r\n\r\n- [Typetalk](http://www.typetalk.in)\r\n- [Typetalk for Developers](http://developers.typetalk.in/)\r\n- [JavaScript Promises: There and Back Again](http://www.html5rocks.com/en/tutorials/es6/promises/)\r\n- [Promise](https://www.promisejs.org/)\r\n\r\n## License\r\nMIT License - http://opensource.org/licenses/MIT\r\n","google":"UA-677679-32","note":"Don't delete this file! It's used internally to help with page regeneration."}